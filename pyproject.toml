[project]
name = "ymir-password-manager-cli"
version = "0.1.0"
description = "A secure and modern Python CLI for managing and encrypting your passwords."
readme = "README.md"
requires-python = ">=3.13"
license = { file = "LICENSE" }
authors = [
  { name = "Yasser KHATTACH", email = "yasser.khattach@gmail.com" }
]
keywords = ["password-manager", "cli", "security", "encryption", "python"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: Other/Proprietary License",
  "Operating System :: OS Independent",
  "Topic :: Security :: Cryptography",
  "Environment :: Console",
]

dependencies = [
    "cryptography>=46.0.1",
    "pydantic>=2.11.9",
    "pyperclip>=1.10.0",
    "rich>=14.1.0",
    "typer>=0.19.1",
]

[project.scripts]
ymir = "ymir.main:main"

[dependency-groups]
dev = [
  "bandit>=1.8.6",
  "black>=25.9.0",
  "pre-commit>=4.3.0",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "ruff>=0.13.1",
  "safety>=3.2.11",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | build
  | dist
  | venv
)/
'''

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
  "E", "W", "F",  # Basic errors, warnings, and pyflakes
  "I",            # Import order
  "C",            # Complexity
  "B",            # Bug detection
  "A",            # Annoyances
  "RUF",          # Ruff-specific rules
]
ignore = [
  "E501",  # Line too long - handled by black
  "C901",  # Too complex - we'll handle security code carefully
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101"]  # Allow assert statements in tests

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov=ymir --cov-report=term-missing"

[tool.coverage.run]
source = ["ymir"]
omit = ["**/__init__.py", "tests/**"]

[tool.coverage.report]
show_missing = true
skip_covered = true
